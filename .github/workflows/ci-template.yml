on:
  workflow_call:
    inputs:
      service:
        description: 'Service name'
        required: true
        type: string
      path:
        description: 'Relative path to the service'
        required: true
        type: string
      node-version:
        description: 'Node.js major version'
        required: true
        type: string
      container:
        description: 'Build & scan container?'
        required: false
        type: boolean
        default: false

jobs:
  lint-test-audit:
    name: 'Lint -> Test -> Audit => ${{ inputs.service }}'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ inputs.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install deps, lint, test, audit
        working-directory: ${{ inputs.path }}
        run: |
          yarn install --frozen-lockfile
          yarn lint
          yarn test
          yarn audit --level high

  container-scan:
    name: Build & Scan Docker (${{ inputs.service }})
    needs: lint-test-audit
    runs-on: ubuntu-latest
    if: ${{ inputs.container }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ── Build with build-args (frontend) ──
      - name: Build Docker image (with build-args)
        if: ${{ inputs.build-args != '' }}
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.path }}
          tags: ${{ inputs.service }}:ci
          load: true
          build-args: |
            ${{ inputs.build-args }}

      # ── Build without build-args (all other services) ──
      - name: Build Docker image (no build-args)
        if: ${{ inputs.build-args == '' }}
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.path }}
          tags: ${{ inputs.service }}:ci
          load: true

      - name: Trivy scan ${{ inputs.service }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ inputs.service }}:ci
