name: Service CI Template

on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string

jobs:
  lint-test-build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - name: Install dependencies
        run: |
          if [ "${{ inputs.service }}" = "frontend" ]; then cd frontend; else cd services/${{ inputs.service }}; fi
          yarn install --frozen-lockfile
      - name: Lint
        run: |
          if [ "${{ inputs.service }}" = "frontend" ]; then cd frontend; else cd services/${{ inputs.service }}; fi
          yarn lint || true
      - name: Test
        run: |
          if [ "${{ inputs.service }}" = "frontend" ]; then cd frontend; else cd services/${{ inputs.service }}; fi
          yarn test || true
      - name: Audit
        run: |
          if [ "${{ inputs.service }}" = "frontend" ]; then cd frontend; else cd services/${{ inputs.service }}; fi
          yarn audit --level high || true
      - name: Set image tag
        id: vars
        run: echo "TAG=${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Build Docker image
        run: |
          if [ "${{ inputs.service }}" = "frontend" ]; then \
            docker build -t ghcr.io/nmbuild/fintrax-frontend:${TAG} ./frontend; \
          else \
            docker build -t ghcr.io/nmbuild/fintrax-${{ inputs.service }}:${TAG} ./services/${{ inputs.service }}; \
          fi
      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push Docker image
        run: |
          if [ "${{ inputs.service }}" = "frontend" ]; then \
            docker push ghcr.io/nmbuild/fintrax-frontend:${TAG}; \
          else \
            docker push ghcr.io/nmbuild/fintrax-${{ inputs.service }}:${TAG}; \
          fi
      - name: Update Helm values file with new image tag
        run: |
          # Determine environment from branch name
          if [[ "${GITHUB_REF}" == *"main" ]]; then ENV="prod";
          elif [[ "${GITHUB_REF}" == *"staging" ]]; then ENV="staging";
          else ENV="dev"; fi

          # Patch the correct values file
          if [ "${{ inputs.service }}" = "frontend" ]; then \
            yq e '.image.tag = "'"${TAG}"'"' -i infra/charts/frontend/values-${ENV}.yaml; \
          else \
            yq e '.image.tag = "'"${TAG}"'"' -i infra/charts/${{ inputs.service }}/values-${ENV}.yaml; \
          fi
      - name: Commit and push Helm values file
        run: |
          git config --global user.email "ci@github.com"
          git config --global user.name "GitHub Actions"
          git add infra/charts/*/values-*.yaml
          git commit -m "Update ${{ inputs.service }} image to ${TAG} [ci skip]" || echo "No changes to commit"
          git push
